# .lldbinit -- lldb initialization file for SwiftFactals C180306PAK
#
# https://soffes.blog/debugging-json-data-in-lldb
# FlockOfSwift: command regex json 's/(.+)/expr let input = %1; print(String(data: try! JSONSerialization.data(withJSONObject: (input is String ? try! JSONSerialization.jsonObject(with: (input as! String).data(using: .utf8)!, options: []) : (input is Data ? (try! JSONSerialization.jsonObject(with: input as! Data, options: [])) : input as! Any)), options: [.prettyPrinted]), encoding: .utf8)!)/'
#
# 20210912 LLDBInitFile in SRCROOT
#	Edit Schemata: LLDBInitFile empty!
# 20201226 Installation on allenM1:
#	command source ~/Documents/SwiftFactals/.lldbinit
#	lldb reads ~/.lldbinit on startup. ln -s ~/Documents/SwiftFactals/.lldbinit ~/.
# 20221024 allenM1
#	editScheme | [Run Debug] | LLDB Init File: $(SRCROOT)/LLDBInitFile
#	command source ~/Documents/SwiftFactals/.lldbinit
#	lldb reads ~/.lldbinit on startup. ln -s ~/Documents/SwiftFactals/.lldbinit ~/.
#
# http://lldb.llvm.org/tutorial.html
# http://stackoverflow.com/questions/10198975/how-can-i-create-a-lldb-alias-that-evaluates-its-argument-using-expression
# https://github.com/alloy/LLDB-Is-It-Not     180303 autoload

# https://opensource.apple.com/source/lldb/lldb-310.2.36/www/troubleshooting.html
settings set target.inline-breakpoint-strategy always

command alias lldbIsLoaded p "ya, ya, ya,  LLDBInitFile is loaded"

#### PrettyPrint target <t> in following ways:
#  1. <t> is " "+<variableName>
#  2. <t> is s:self, m:model, v:vew, n:SCNNode or
##Shortcut: - PpMode:
# pc<t>    .fwClassName	// classname				e.g: "Port"
# pn<t>    .name		// name (in parent)			e.g: "P"
# pnuc<t>  .nameUidClass// name:Uid:Class ??		e.g:
# pf<t>    .fullName	// fullname					e.g: /net/foo/a.P
# po<t>    	 <n.a.>     // print object
# # ---------- pi**     //
# pi<t>    .uidClass	// uid:class				e.g. 456:Port
# piU<t>   .uid			// uid						e.g: "456")
# piCu<t>  .classUid	// class:uid				e.g: "Port<456>"
# piUc<t>  .uidClass  	// uid:class				e.g: "456:Port"		<-- DUPLICATE
# piFuc<t> .fullNameUidClass						e.g: "ROOT/max/P/456:Port"
# # ---- p*             //
# pp<t>    .phrase		// shorter than short		e.g: [z:1]
# ps<t>    .short		// shortest, canonic form	e.g: [0.0, 0.0, 0.0]
# pl<t>    .line		// self 1-line, used in tree
# pt<t>    .tree		// multi-line (+children), 	(e.g: multi-line)
# #  ---- p*L           //
# ppL<t>   .phrase 		// + Links
# plL<t>   .line 		// + Links
# ptL<t>   .tree 		// + Links
# #  ---- p*P           //
# ppP<t>   .phrase 		// + Parameters
# plP<t>   .line 		// + Parameters
# ptP<t>   .tree 		// + Parameters
# # ---- p*LP           //
# ppLP<t>  .phrase 		// + Links + Parameters
# plLP<t>  .line 		// + Links + Parameters
# ptLP<t>  .tree 		// + Links + Parameters

## :H:
######## ---- First  Character: -------- [Pp] -------------- {p: print without property hash; P is with)
######## ---- Middle Character(s): ----- [pc,pn,pnu,pf,pi,piCu,piU,piFuc,pp,ps,pl,pt] -- Tree with Ports and Links
#command regex pc    's/^(.+)$/e print(%1.pp(.fwClassName, DOClog.params4aux + ["ppDagOrder":true]))/'

##---------------- third arg from
command regex pc     's/^(.+)$/e lldbPrint(%1, mode:.fwClassName,DOClog.params4aux + ["ppDagOrder":true])/'
command regex pn     's/^(.+)$/e lldbPrint(%1, mode:.name		)/'				-h "print HNW '<name>'            e.g: ROOT"
command regex pnuc   's/^(.+)$/e lldbPrint(%1, mode:.nameUidClass)/'			-h "print HNW '<name>.<id>:<class>' e.g: ROOT.76a8:Parts"
command regex pf     's/^(.+)$/e lldbPrint(%1, mode:.fullName	)/' 			-h "print HNW '<fullName>' the hierarchy path e.g: xxxxx FIXME"
#command regex po     's/^(.+)$/po %1/'  # don't overload
# ---- pi*
command regex pi     's/^(.+)$/e lldbPrint(%1, mode:.uidClass	)/' 			-h "print HNW '<id>:<Class>'      e.g: 76a8:Parts"
command regex piU    's/^(.+)$/e lldbPrint(%1, mode:.uid		)/' 			-h "print HNW '<id>'              e.g: 76a8"
command regex piCu   's/^(.+)$/e lldbPrint(%1, mode:.classUid	)/' 			-h "print HNW '<Class><id>'       e.g: Parts<76a8>"
command regex piUc   's/^(.+)$/e lldbPrint(%1, mode:.uidClass	)/' 			-h "print HNW '<id><Class>'       e.g: 76a8:Parts"
command regex piFuc  's/^(.+)$/e lldbPrint(%1, mode:.fullNameUidClass)/' 		-h "print HNW '<fullName><id><Class>' e.g: ROOT/76a8:Parts"
# ---- p*
command regex pp     's/^(.+)$/e lldbPrint(%1, mode:.phrase		)/' 			-h "pretty print HNW"
command regex ps     's/^(.+)$/e lldbPrint(%1, mode:.short		)/' 			-h "print short HNW"
command regex pl     's/^(.+)$/e lldbPrint(%1, mode:.line		)/' 			-h "print line"
command regex pt     's/^(.+)$/e lldbPrint(%1, mode:.tree,		["ppDagOrder":true])/' -h "print tree"
# ---- p*L
command regex ppL    's/^(.+)$/e lldbPrint(%1, mode:.phrase,	["ppLinks":true])/'
command regex plL    's/^(.+)$/e lldbPrint(%1, mode:.line,		["ppLinks":true])/'
command regex ptL    's/^(.+)$/e lldbPrint(%1, mode:.tree,		["ppLinks":true, "ppDagOrder":true])/'
# ---- p*P
command regex ppP    's/^(.+)$/e lldbPrint(%1, mode:.phrase,	["ppParam":true])/'
command regex plP    's/^(.+)$/e lldbPrint(%1, mode:.line,		["ppParam":true])/'
command regex ptP    's/^(.+)$/e lldbPrint(%1, mode:.tree,		["ppParam":true], "ppDagOrder":true)/'
# ---- p*LP
command regex ppLP   's/^(.+)$/e lldbPrint(%1, mode:.phrase,	["ppLinks":true, "ppParam":true])/'
command regex plLP   's/^(.+)$/e lldbPrint(%1, mode:.line,		["ppLinks":true, "ppParam":true])/'
command regex ptLP   's/^(.+)$/e lldbPrint(%1, mode:.tree,		["ppLinks":true, "ppParam":true], "ppDagOrder":true])/'


##---------------- 's' is for sel/f
command alias pcs     pc      self
command alias pns      pn      self
command alias pnucs    pnuc    self
command alias pfs      pf      self
command alias pos      po      self
# ---- pi*s
command alias pis     pi      self
command alias piUs     piU     self
command alias piCus    piCu    self
command alias piUcs    piUc    self
command alias piFucs   piFuc   self
# ---- p*s
command alias pps     pp      self
command alias pss      ps      self
command alias pls      pl      self
command alias pts      pt      self
# ---- p*Ls
command alias ppLs    ppL     self
command alias plLs     plL     self
command alias ptLs     ptL     self
# ---- p*Ps
command alias ppPs    ppP     self
command alias plPs     plP     self
command alias ptPs     ptP     self
# ---- p*LPs
command alias ppLPs   ppLP    self
command alias plLPs    plLP    self
command alias ptLPs    ptLP    self


##---------------- 'm' is for whole model
command alias pcm      pc    LLDBrootPart
command alias pnm       pn    LLDBrootPart
command alias pnucm     pnuc  LLDBrootPart
command alias pfm       pf    LLDBrootPart
command alias pom       po    LLDBrootPart
# ---- pi*m
command alias pim      pi    LLDBrootPart
command alias piUm		piU   LLDBrootPart
command alias piCum		piCu  LLDBrootPart
command alias piUcm		piUc  LLDBrootPart
command alias piFucm	piFuc LLDBrootPart
# ---- p*m
command alias ppm      pp    LLDBrootPart
command alias psm       ps    LLDBrootPart
command alias plm       pl    LLDBrootPart
command alias ptm       pt    LLDBrootPart
# ---- p*Lm
command alias ppLm     ppL   LLDBrootPart
command alias plLm      plL   LLDBrootPart
command alias ptLm      ptL   LLDBrootPart
# ---- p*Pm
command alias ppPm     ppP   LLDBrootPart
command alias plPm      plP   LLDBrootPart
command alias ptPm      ptP   LLDBrootPart
# ---- p*LPm
command alias ppLPm    ppLP  LLDBrootPart
command alias plLPm     plLP  LLDBrootPart
command alias ptLPm     ptLP  LLDBrootPart


##---------------- 'v' is for whole vew ----------------------
command alias pcv      pc    LLDBvews0
command alias pcv0      pc    LLDBvews0
command alias pcv1      pc    LLDBvews1
command alias pcv2      pc    LLDBvews2
command alias pnv      pn    LLDBvews0
command alias pnv0      pn    LLDBvews0
command alias pnv1      pn    LLDBvews1
command alias pnv2      pn    LLDBvews2
command alias pnucv    pnuc  LLDBvews0
command alias pnucv0    pnuc  LLDBvews0
command alias pnucv1    pnuc  LLDBvews1
command alias pnucv2    pnuc  LLDBvews2
command alias pfv      pf    LLDBvews0
command alias pfv0      pf    LLDBvews0
command alias pfv1      pf    LLDBvews1
command alias pfv2      pf    LLDBvews2
command alias pov      po    LLDBvews0
command alias pov0      po    LLDBvews0
command alias pov1      po    LLDBvews1
command alias pov2      po    LLDBvews2
# ---- pi*v
command alias piv      pi    LLDBvews0
command alias piv0      pi    LLDBvews0
command alias piv1      pi    LLDBvews1
command alias piv2      pi    LLDBvews2
command alias piUv     piU   LLDBvews0
command alias piUv0     piU   LLDBvews0
command alias piUv1     piU   LLDBvews1
command alias piUv2     piU   LLDBvews2
command alias piCuv    piCu  LLDBvews0
command alias piCuv0    piCu  LLDBvews0
command alias piCuv1    piCu  LLDBvews1
command alias piCuv2    piCu  LLDBvews2
command alias piUcv    piUc  LLDBvews0
command alias piUcv0    piUc  LLDBvews0
command alias piUcv1    piUc  LLDBvews1
command alias piUcv2    piUc  LLDBvews2
command alias piFucv   piFuc LLDBvews0
command alias piFucv0   piFuc LLDBvews0
command alias piFucv1   piFuc LLDBvews1
command alias piFucv2   piFuc LLDBvews2

# ---- p*v
command alias ppv      pp    LLDBvews0
command alias ppv0      pp    LLDBvews0
command alias ppv1      pp    LLDBvews1
command alias ppv2      pp    LLDBvews2
command alias psv      ps    LLDBvews0
command alias psv0      ps    LLDBvews0
command alias psv1      ps    LLDBvews1
command alias psv2      ps    LLDBvews2
command alias plv      pl    LLDBvews0
command alias plv0      pl    LLDBvews0
command alias plv1      pl    LLDBvews1
command alias plv2      pl    LLDBvews2
command alias ptv      pt    LLDBvews0
command alias ptv0      pt    LLDBvews0
command alias ptv1      pt    LLDBvews1
command alias ptv2      pt    LLDBvews2
# ---- p*Lv
command alias ppLv     ppL   LLDBvews0
command alias ppLv0     ppL   LLDBvews0
command alias ppLv1     ppL   LLDBvews1
command alias ppLv2     ppL   LLDBvews2
command alias plLv     plL   LLDBvews0
command alias plLv0     plL   LLDBvews0
command alias plLv1     plL   LLDBvews1
command alias plLv2     plL   LLDBvews2
command alias ptLv     ptL   LLDBvews0
command alias ptLv0     ptL   LLDBvews0
command alias ptLv1     ptL   LLDBvews1
command alias ptLv2     ptL   LLDBvews2
# ---- p*Pv
command alias ppPv     ppP   LLDBvews0
command alias ppPv0     ppP   LLDBvews0
command alias ppPv1     ppP   LLDBvews1
command alias ppPv2     ppP   LLDBvews2
command alias plPv     plP   LLDBvews0
command alias plPv0     plP   LLDBvews0
command alias plPv1     plP   LLDBvews1
command alias plPv2     plP   LLDBvews2
command alias ptPv     ptP   LLDBvews0
command alias ptPv0     ptP   LLDBvews0
command alias ptPv1     ptP   LLDBvews1
command alias ptPv2     ptP   LLDBvews2
# ---- p*LPv
command alias ppLPv    ppLP  LLDBvews0
command alias ppLP0     ppLP  LLDBvews0
command alias ppLP1     ppLP  LLDBvews1
command alias ppLP2     ppLP  LLDBvews2
command alias plLPv    plLP  LLDBvews0
command alias plLP0     plLP  LLDBvews0
command alias plLP1     plLP  LLDBvews1
command alias plLP2     plLP  LLDBvews2
command alias ptLPv    ptLP  LLDBvews0
command alias ptLP0     ptLP  LLDBvews0
command alias ptLP1     ptLP  LLDBvews1
command alias ptLP2     ptLP  LLDBvews2


##---------------- 'n' is for all SCNNodes ----------------------
command alias pcn      pc    LLDBscnNodes0tree
command alias pcn0      pc    LLDBscnNodes0tree
command alias pcn1      pc    LLDBscnNodes1tree
command alias pcn2      pc    LLDBscnNodes2tree
command alias pnn      pn    LLDBscnNodes0tree
command alias pnn0      pn    LLDBscnNodes0tree
command alias pnn1      pn    LLDBscnNodes1tree
command alias pnn2      pn    LLDBscnNodes2tree
command alias pnucn    pnuc  LLDBscnNodes0tree
command alias pnucn0    pnuc  LLDBscnNodes0tree
command alias pnucn1    pnuc  LLDBscnNodes1tree
command alias pnucn2    pnuc  LLDBscnNodes2tree
command alias pfn      pf    LLDBscnNodes0tree
command alias pfn0      pf    LLDBscnNodes0tree
command alias pfn1      pf    LLDBscnNodes1tree
command alias pfn2      pf    LLDBscnNodes2tree
command alias pon      po    LLDBscnNodes0tree
command alias pon0      po    LLDBscnNodes0tree
command alias pon1      po    LLDBscnNodes1tree
command alias pon2      po    LLDBscnNodes2tree
# ---- pi*n
command alias pin      pi    LLDBscnNodes0tree
command alias pin0      pi    LLDBscnNodes0tree
command alias pin1      pi    LLDBscnNodes1tree
command alias pin2      pi    LLDBscnNodes2tree
command alias piUn     piU   LLDBscnNodes0tree
command alias piUn0     piU   LLDBscnNodes0tree
command alias piUn1     piU   LLDBscnNodes1tree
command alias piUn2     piU   LLDBscnNodes2tree
command alias piCun    piCu  LLDBscnNodes0tree
command alias piCun0    piCu  LLDBscnNodes0tree
command alias piCun1    piCu  LLDBscnNodes1tree
command alias piCun2    piCu  LLDBscnNodes2tree
command alias piUcn    piUc  LLDBscnNodes0tree
command alias piUcn0    piUc  LLDBscnNodes0tree
command alias piUcn1    piUc  LLDBscnNodes1tree
command alias piUcn2    piUc  LLDBscnNodes2tree
command alias piFucn   piFuc LLDBscnNodes0tree
command alias piFucn0   piFuc LLDBscnNodes0tree
command alias piFucn1   piFuc LLDBscnNodes1tree
command alias piFucn2   piFuc LLDBscnNodes2tree
# ---- p*n
command alias ppn      pp    LLDBscnNodes0tree
command alias ppn0      pp    LLDBscnNodes0tree
command alias ppn1      pp    LLDBscnNodes1tree
command alias ppn2      pp    LLDBscnNodes2tree
command alias psn      ps    LLDBscnNodes0tree
command alias psn0      ps    LLDBscnNodes0tree
command alias psn1      ps    LLDBscnNodes1tree
command alias psn2      ps    LLDBscnNodes2tree
command alias pln      pl    LLDBscnNodes0tree
command alias pln0      pl    LLDBscnNodes0tree
command alias pln1      pl    LLDBscnNodes1tree
command alias pln2      pl    LLDBscnNodes2tree
command alias ptn      pt    LLDBscnNodes0tree
command alias ptn0      pt    LLDBscnNodes0tree
command alias ptn1      pt    LLDBscnNodes1tree
command alias ptn2      pt    LLDBscnNodes2tree
# ---- p*Ln
command alias ppLn     ppL   LLDBscnNodes0tree
command alias ppLn0     ppL   LLDBscnNodes0tree
command alias ppLn1     ppL   LLDBscnNodes1tree
command alias ppLn2     ppL   LLDBscnNodes2tree
command alias plLn     plL   LLDBscnNodes0tree
command alias plLn0     plL   LLDBscnNodes0tree
command alias plLn1     plL   LLDBscnNodes1tree
command alias plLn2     plL   LLDBscnNodes2tree
command alias ptLn     ptL   LLDBscnNodes0tree
command alias ptLn0     ptL   LLDBscnNodes0tree
command alias ptLn1     ptL   LLDBscnNodes1tree
command alias ptLn2     ptL   LLDBscnNodes2tree
# ---- p*Pn
command alias ppPn     ppP   LLDBscnNodes0tree
command alias ppPn0     ppP   LLDBscnNodes0tree
command alias ppPn1     ppP   LLDBscnNodes1tree
command alias ppPn2     ppP   LLDBscnNodes2tree
command alias plPn     plP   LLDBscnNodes0tree
command alias plPn0     plP   LLDBscnNodes0tree
command alias plPn1     plP   LLDBscnNodes1tree
command alias plPn2     plP   LLDBscnNodes2tree
command alias ptPn     ptP   LLDBscnNodes0tree
command alias ptPn0     ptP   LLDBscnNodes0tree
command alias ptPn1     ptP   LLDBscnNodes1tree
command alias ptPn2     ptP   LLDBscnNodes2tree
# ---- p*LPn
command alias ppLPn    ppLP  LLDBscnNodes0tree
command alias ppLPn0    ppLP  LLDBscnNodes0tree
command alias ppLPn1    ppLP  LLDBscnNodes1tree
command alias ppLPn2    ppLP  LLDBscnNodes2tree
command alias plLPn    plLP  LLDBscnNodes0tree
command alias plLPn0    plLP  LLDBscnNodes0tree
command alias plLPn1    plLP  LLDBscnNodes1tree
command alias plLPn2    plLP  LLDBscnNodes2tree
command alias ptLPn    ptLP  LLDBscnNodes0tree
command alias ptLPn0    ptLP  LLDBscnNodes0tree
command alias ptLPn1    ptLP  LLDBscnNodes1tree
command alias ptLPn2    ptLP  LLDBscnNodes2tree



# In the wind:
     # replace 'selfBoundingBox Factals.FwBBox 0x000060000007b4c0' with '(FwBBox) [3>5, ...
     # p1: 'String' has no 1-line summary
     ### HELP p1 selfStr
     #command regex pi     's/^(.+)$/expression -- print(%1.fullname)/'  ## ??? pi ; fullname;
     # CGPoint support

# print [.line, .tree,...] with
#     parameters, bbox [scn, fw]
#              e.g: p print( pp(.tree, ["ppPorts":true]))o

# sometimes the option does the wrong thing, like ["t1":String, "t2":String] instead of [t1, t2]

# Proposals:
# pt(parameters) [...]         "P"        ? ptPs, ptPm, ptP<>, ...
# pt(links)      [...]         "L"    ? ptLs, ptLm, ptL<>, ...

# Easy specification of additional print parameters e.g. "ppParam":true
#
##-----------------    PRINT Objective C
#command regex piXX    's/^(.+)$/expression -- pInfo(%1)/'          H E L P

##-----------------    retain counts (not precise, but often interesting and helpful)
command regex prc      's/^(.+)$/expression -- (int)[%1 retainCount]/'
#
##-----------------
#command alias ogl     expression -- ogl()

##-----------------    Print RAW
command alias  pr      frame v -R

########## ########## ########## ########## ########## ########## ########## 
# -- SUMMARIES:
type summary add --summary-string  "Part.name=${var.name}"  Part
type summary add --summary-string  "Vew.name=${var.name} part:${var.part.name}"  Vew
########## ########## ########## ########## ########## ########## ########## 
#
command     alias fwHelp 		expression fwHelp("?")
command     alias pFwConfig		expression printFwConfig()
command     alias pFwState		expression printFwState()

############################### FILE A BUG REPORT: Would like, but BROKEN. wanted badly:
#command alias lldbinit		command source ~/.lldbinit					# DOESN'T WORK
#command alias lldbinit		command source $(PROJECT_DIR)/LLDBInitFile	# DOESN'T WORK
command alias lldbinit		command source $(SRCROOT)/LLDBInitFile		# DOESN'T WORK
#command alias lldbinit		lldbinitFactals								# DOESN'T WORK

## allenM1:
command alias lldbinit			 	  command source ~/DocLocal/HaveNWant/Factals/LLDBInitFile
command alias lldbinitFactals	 	  command source ~/DocLocal/HaveNWant/Factals/LLDBInitFile
command alias lldbinitFooDocTry3	  command source ~/DocLocal/HaveNWant/FooDocTry3Clone/LLDBInitFile
command alias lldbinitSwiftFactals	  command source ~/DocLocal/HaveNWant/SwiftFactals/LLDBInitFile
command alias lldbinitFactalWorkbench command source ~/DocLocal/HaveNWant/FactalWorkbench/LLDBInitFile

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # LOADING .lldbinit for Factals COMPLETE # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# reload with  lldbinit  = '  command source ~/DocLocal/HaveNWant/Factals/LLDBInitFile '
#    N.B: Edit Schema; in tabs [run | debug]; in field 'lldb init file' enter:$(SRCROOT)/LLDBInitFile
## Common Commands: ptm, plv, ppn, pfs, ptPm, plLm
# :H: Character 1:   p- -: Pretty Print
# :H: Character 2:   -p -:.phrase; -l -:.line,          -t--:.tree,
# :H: Character 2:   -c -:classF;  -n -:name,           -f--:fullName, -i--:.id,aaaaaaa
# :H: Character 2.5: --L-:ppLinks; --P-:ppParameters
# :H: Character 3:   -- s:self;    ---m:root_Experiment ---v:root Vew  --n-:root SCNNode
## use LLDBrootPart("<name>") and LLDBrootVew("<name>") to find a part in tree
## pFwState, pFwConfig fwHelp("C")

