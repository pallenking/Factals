eed  | light1  . . . . . .  0          01 geom:nil
 1fc  | |  \light: ##
 eed  | light1  . . . . . .  0          01 geom:nil
 1fc  | |  \light:. . . . . 

 3a2  | camera  . . . . . .  [ 0.0 0.01001 geom:nil
| |  \camera:. . . . . 


 ee1  | light   . . . . . .  [ 0.0 0.01501 geom:nil
 f1f  | ambient . . . . . .  0          01 geom:nil
 ae5  | camera  . . . . . .  [ 0.0 0.01501 geom:nil

 6d4  | light1  . . . . . .  [ 0.0 0.01501 geom:nil
 af8  | ambient1. . . . . .  0          01 geom:nil
 73a  | ambient2. . . . . .  0          01 geom:nil
 4d6  | omni1   . . . . . .  0          01 geom:nil
 31e  | camera  . . . . . .  [ 0.0 0.05001 geom:nil


================================================================ PROBLEM 1:
[logging] open flag(s) 0x01000000 are reserved for VFS use and do not affect behaviour when passed to sqlite3_open_v2


================================================================ PROBLEM 2:
[logging-persist] cannot open file  open(/private/var/db/DetachedSignatures) - Undefined error: 0

================================================================ PROBLEM 3:
Main Thread Checker: UI API called on a background thread: -[NSResponder init]
PID: 30582, TID: 939321, Thread name: (none), Queue name: NSDocumentController Opening (QOS: UNSPECIFIED), QoS: 0
Backtrace:
4   FooDocTry3     104c4db8c $s10 FooDocTry3 4 Part     CyACSDySSAA5 FwAny_ pGcfc + 2356
5   FooDocTry3     10494c738 $s10 FooDocTry3 8 RootPart CACycfc + 1332
6   FooDocTry3     10494c1d4 $s10 FooDocTry3 8 RootPart CACycfC + 44
7   FooDocTry3     1049541c4 $s10 FooDocTry3 8 RootPart C11 fromLibrary ACSS_tcfC + 256	   //RootPart:344 init(fromLibrary
8   FooDocTry3     104b44104 $s10 FooDocTry3 0abC8 Document VACycfC + 532
9   FooDocTry3     104c06808 $s10 FooDocTry3 0abC3 AppV4bodyQrvgAA0abC8DocumentVycfu_ + 32
10  SwiftUI        1c534d664 OUTLINED_FUNCTION_3 + 14860
11  SwiftUI        1c5f909b0 OUTLINED_FUNCTION_151 + 1292
12  SwiftUI        1c5f90708 OUTLINED_FUNCTION_151 + 612
13  SwiftUI        1c5f9075c OUTLINED_FUNCTION_151 + 696
14  AppKit         1a20f388c -[NSDocument initForURL:withContentsOfURL:ofType:error:] + 196
15  AppKit         1a2121334 -[NSDocumentController makeDocumentForURL:withContentsOfURL:ofType:error:] + 296
16  AppKit         1a21208b0 __104-[NSDocumentController makeDocumentForURL:withContentsOfURL:alternateContents:ofType:completionHandler:]_block_invoke + 76
17  Foundation     19f91e350 __NSBLOCKOPERATION_IS_CALLING_OUT_TO_A_BLOCK__ + 24
18  Foundation     19f91e210 -[NSBlockOperation main] + 104
19  Foundation     19f91e1a0 __NSOPERATION_IS_INVOKING_MAIN__ + 16
20  Foundation     19f91d5b8 -[NSOperation start] + 708



RootPart.from(data:encoding:) ERROR:
	'keyNotFound(
		RootPartKeys(
			stringValue:"partTreeVerbose", intValue:nil),
		Swift.DecodingError.Context(
			codingPath:[],
			debugDescription:"No value associated with key 
				RootPartKeys(
					stringValue:\"partTreeVerbose\", 
					intValue: nil
				) (
				\"partTreeVerbose\"
				).",
			underlyingError: nil
		)
	)
	


top
0		NSTheme 	Hosting view	  -			View 		SCNView
		Frame		Controller					Host

1		NSTheme		Hosting View	Hosting		View	|
		Frame		Controller		view		Host	|
														|
2		NSTheme		Hosting View	Hosting		View	|	NSEventRec-
		Frame		Controller		view		Host	|	eiverView
														|
3		NSTheme		Hosting View	Hosting		View	|
		Frame		Controller		view		Host	|
											+
4		NSTheme		Hosting View	Hosting		Observable	Horizontal\		Vertical\	Overlay	|	ZStack		NSEventReceiver
		Frame		Controller		view		DocBox		Stack-	  4X	Stack-	2X			|		2X
												InView		Center	  /		Center	/  			|
																	  							|
5		NSTheme		Hosting View	Hosting		Observable	Horizontal\		Vertical\	Overlay	|	ZStack		NSSceneKit
		Frame		Controller		view		DocBox		Stack-	  4X	Stack-	2X			|		2X		HostingView
												InView		Center	  /		Center	/  			|
																	  							|
6		NSTheme		Hosting View	Hosting		Observable	Horizontal\		Vertical\	Overlay	|	ZStack
		Frame		Controller		view		DocBox		Stack-	  4X	Stack-	2X			|		2X
												InView		Center	  /		Center	/  			|
																	  							|
7		NSTheme		Hosting View	Hosting		Observable	Horizontal\		Vertical\	Overlay	|	ZStack		_ShapeView<
		Frame		Controller		view		DocBox		Stack-	  4X	Stack-	2X			|		1X		Rectangle Inset
												InView		Center	  /		Center	/  			|

8		NSTheme		Hosting View	Hosting		Observable	Horizontal\		Vertical\	Overlay
		Frame		Controller		view		DocBox		Stack-	  4X	Stack-	2X			
												InView		Center	  /		Center	/  			

9		NSTheme		Hosting View	Hosting		Observable	Horizontal\		Vertical\
		Frame		Controller		view		DocBox		Stack-	  4X	Stack-	2X			
												InView		Center	  /		Center	/  			

10		NSTheme		Hosting View	Hosting		Observable	Horizontal\		Vertical\
		Frame		Controller		view		DocBox		Stack-	  4X	Stack-	1X			
												InView		Center	  /		Center	/  			

11		NSTheme		Hosting View	Hosting		Observable	Horizontal\	
		Frame		Controller		view		DocBox		Stack-	  4X
												InView		Center	  /	

12		NSTheme		Hosting View	Hosting		Observable	Horizontal\	
		Frame		Controller		view		DocBox		Stack-	  3X
												InView		Center	  /	

13		NSTheme		Hosting View	Hosting		Observable	Horizontal\	
		Frame		Controller		view		DocBox		Stack-	  2X
												InView		Center	  /	

14		NSTheme		Hosting View	Hosting		Observable	Horizontal\	
		Frame		Controller		view		DocBox		Stack-	  1X
												InView		Center	  /	
15		NSTheme		Hosting View	Hosting		Observable
		Frame		Controller		view		DocBox		
												InView		
16		NSTheme		Hosting View	Hosting
		Frame		Controller		view	
											
17		NSTheme		NSVisual
		Frame		Effect View

18		NSTheme
		Frame












================
NSThemeFrame
	Hosting View Controller
		ViewHost
			SCNView						1

		HostingView
			ViewHost
				NSEventReceiverView 3X	2,3,4

NSThemeFrame										18
	NSVisualEffectView								17
	HostingViewController
		HostingView									16
			ObservableDocBoxInView					15
				HorizontalStack-Center 		1x		14
				HorizontalStack-Center 		2x		13
				HorizontalStack-Center 		3x		12
				HorizontalStack-Center 		4x		11
					VerticalStack-Center	1x		10
					VerticalStack-Center	2x		9
						Overlay						8
							ZStack			1x
								_ShapeView<Rect>	7
							ZStack			2x		6
								NSSceneKitHostingView 5
			.					NSEventReceiver		4
			ViewHost								3
				NSEventReceiverView					2
			ViewHost								1
		ViewHost												1
















############  1. (1bd:Atom).equalsPart(a79:Atom)  ###########
1bd  <##         a:Atom  oV 
258  |\            P:Port  o  0.00>
 ??====(!identical,  equatable)====??  CALCULATED
a79  <##         a:Atom  oV 
1db  |\            P:Port  o  0.00>
1.029 1bd:Atom: Testing Atom:    'a:Atom 1 children'.equals('a:Atom 1 children')
1.030 1bd:Atom: Testing Part:    'a:Atom 1 children'.equals('a:Atom 1 children')
1.031 258:Port: Testing Port:    'P/258:Port'.equals('P/1db:Port')
1.032 258:Port: Testing Part:    'P/258:Port'.equals('P/1db:Port')
1.033 258:Port: Result Part:     'P/258:Port' == 'P/1db:Port' ---> true

1.034 2e0f:Dict.Testing Dict:    Optional('P/258:Port').equals(Optional('P/1db:Port'))
1.035 2e6f:Dict.Result Dict:     ["P": 'P/258:Port'] == ["P": 'P/1db:Port'] ---> false
1.036 1bd:Atom: Result Part:     'a:Atom 1 children' == 'a:Atom 1 children' ---> false
 ??====(!identical, !equatable)====??  ACTUAL

1.037 1bd:Atom: Testing Atom:    'a:Atom 1 children'.equals('a:Atom 1 children')
1.038 1bd:Atom: Testing Part:    'a:Atom 1 children'.equals('a:Atom 1 children')
1.039 258:Port: Testing Port:    'P/258:Port'.equals('P/1db:Port')
1.040 258:Port: Testing Part:    'P/258:Port'.equals('P/1db:Port')
1.041 258:Port: Result Part:     'P/258:Port' == 'P/1db:Port' ---> true
1.042 a6a7:DictiTesting Dict:    Optional('P/258:Port').equals(Optional('P/1db:Port'))
1.043 a322:DictiResult Dict:     ["P": 'P/258:Port'] == ["P": 'P/1db:Port'] ---> false
1.044 1bd:Atom: Result Part:     'a:Atom 1 children' == 'a:Atom 1 children' ---> false
	--------------------------------
	---   a   B U G   to fix!    ---
	--------------------------------
	















1.029 Aflt-    bfb:Atom:         Testing Atom:    'a:Atom 1 children'.equals('a:Atom 1 children')
1.030 Aflt-    bfb:Atom:         Testing Part:    'a:Atom 1 children'.equals('a:Atom 1 children')
1.031 Aflt-    001:Port:         Testing Port:    'P/001:Port'.equals('P/b75:Port')
1.032 Aflt-    001:Port:         Testing Part:    'P/001:Port'.equals('P/b75:Port')
1.033 Aflt-    001:Port:         Result  Part:    'P/001:Port' == 'P/b75:Port' ---> true

















1.019 Aflt-    ffc:Atom:         Testing Part: a.ffc:Atom == a.bf8:Atom
1.020 Aflt-    ffc:Atom:         Testing ATom:    .equals(a.bf8:Atom)
1.021 Aflt-    ffc:Atom:         Testing PArt:    .equals(a.bf8:Atom)
1.022 Aflt-    ffc:Atom:         Testing Atom:    .equals(a.bf8:Atom) ---> false
1.023 Aflt-    ffc:Atom:         Testing Atom:    .equals(a.bf8:Atom) ---> false
1.024 Aflt-    ffc:Atom:         Result  Part: a.ffc:Atom == a.bf8:Atom  ---> false
















"breakAt" : breakLogEvNum<0 ? 0 :
	    breakLogEvNum + breakLogIdIndex * Logger.entryNosPlog,
	     ***********     *************
	        evNum     +         idIndex * L..
			  	    logNo
			
breakAtEvent
breakAtLogger

Tivo Service # 746002190A710FE

d80:     _ROOT:RootVew s:  *-ROOT/c20 p:  ROOT/8f5:RootPa. . . . . . . . . .     o- w0 rootVew:d80 (1 Nodes) LockVal:1 UNOWNED
 MISSING from rootVews rootVew.parts MISMATCH
 MISSING from rootVews rootVew.parts MISMATCH
















viewAppearedFor(scnViewsArgs:SceneKitArgs) {//scnViewsArgs.sceneIndex
	createVewNScn(sceneIndex:args.sceneIndex)
		rootVew.updateVewSizePaint(vewConfig:vewConfig)
			hasDirty(.vew)
				vRoot.adorn(from:pRoot, using:vewConfig)
		touchLightScns()
		getCameraScn([:])
		getAxesScn()
















3.034 Arsi7    :656                        fillScreen -2<2, -2<2, -52<-48  Width Dominated  zoom:4.86)
 725  FactalsApp   . . . . . . . . . . regressScene:-1, emptyEntry:'xr()'
 c06  | APP's Library. . . . . . . . . (>X<)
 cd4  | TestsFoo     . . . . . . . . . (>X<)
 1de  | Tests01      . . . . . . . . . (>X<)
 9a1  | TivoRemote   . . . . . . . . . (>X<)
 a10  | LangDeser    . . . . . . . . . (>X<)
 c96  | APPLOG       . . . . . . . . . Logger 1: "App's Logger": entryNo:1, breakAtEvent:-21 in:3, verbosity:[:4 elts],
 8f5  DOC (currently selected)
 8f5  FactalsDocume. . . . . . . . . . 
 656  | FwGuts       . . . . . . . . . 
 dd9  | | RootPart     . . . . . . . . rootPart:dd9 (2 Ports) UNOWNED dirty:' ' 
 bc6  | | | Simulator    . . . . . . . 
 f05  | | RootVew 0    . . . . . . . . rootVew:f05 (6 Nodes) LockVal:1 UNOWNED pole:[at:0, s:0, u:0, z:1.0000]-w[0] lookAtVew:f05:  | |    _ROOT:RootVew s:  *-ROOT/2d6 p:  ROOT/dd9:RootPa. . . . . . . .     o- w0 
829:  | | |    _prt2:NetVew  s:  *-prt2/5cc p:  prt2/218:Net   . . . . . . . 0/0 o+ w[0-10] 
b15:Ff| | | |    _prt1:Vew     s:  *-prt1/761 p:  prt1/357:MaxOr . . . . . .     o+ w[010] 
3e2:F | | | | |       _P:Vew     s:     *-P/422 p:     P/3c2:Port  . . . . .     o+ w[020] 
698:Ff| | | |       _a:Vew     s:     *-a/d34 p:     a/107:Hammin. . . . . .     o+ w[0-00] 
4da:F | | | | |       _P:Vew     s:     *-P/294 p:     P/cbd:Port  . . . . .     o+ w[010] 

 6a8  | | | FwScn        . . . . . . . rootScn:2d6 (76 SCNNodes) animatePhysics:false
 bf5  | | | | SCNScene     . . . . . . isPaused:true
 d3c  | | | | | SCNPhysicsWor. . . . . gravity:[y:-1], speed:1.0000, timeStep:0.0167
 480  | | | | SCNView      . . . . . . 0 children superview:a9c window:4b2 noRedisplay 
 5fa  | | | EventCentral . . . . . . . 
 c94  | | DOClogger    . . . . . . . . Logger 3: "FwGut's Logger": entryNo:35, breakAtEvent:-21 in:3, verbosity:[:4 elts],
 c94  DOClogger    . . . . . . . . . . Logger 3: "FwGut's Logger": entryNo:35, breakAtEvent:-21 in:3, verbosity:[:4 elts],
 de0  DOCctlr      . . . . . . . . . . 1 FwDocument:
 a0b  | NSDocument   . . . . . . . . . Has 1 wc:   #ADD MORE HERE#
 254  | | NSWindowCtlr . . . . . . . . nilNameNib;;doc:a0b win:4b2 nibOwner:254 
 4b2  | | | NSWindow     . . . . . . . title:'Untitled' contentVC:959 contentView:e64 delegate:--- 
 ---  | | | \ contentVew OMITTED












(NSPoint) $R0 = (x = 449.9727783203125, y = 114.30767822265625)
(NSPoint) $R0 = (x = 450.1793212890625, y = 24.28729248046875)














  configureApp(from:config + 		params4all)
  FwGuts:  Log(title:"FwGut's Log",	params4all)

var params4all		: FwConfig		= {	return
	params4app	+   // ONLY USE
	params4appLog	+   // ONLY USE
	params4pp ##	+   // LOTS
	params4docLog	+   // ONLY USE
	params4sim	+   // ONLY USE
	params4vew	+   // ONLY USE
[:]} ()

params4sim     = ["simEnabled":"simTaskPeriod":"simTimeStep"         4
params4vew     = ["linkVelocityLog2":"placeMe":"placeMy"	    39
params4app     = [ "soundVolume":"regressScene":"emptyEntry"         3

	    		           4             20         1
params4appLog  =1 [params4pp## +params4logs_+log(all:appLogN)        25
params4docLog  =1 [params4pp## +params4logs_+log(all:docLogN)        25
  params4pp    =3 ["pp...":... (LOTS)]			   	     20
  params4logs_ =2 ["debugPreLog":"debugOutterLock":...]	   	     4






##	FgView:body.SceneView().onAppear(perform: ##setupHitTesting)
	  FgView:##setupHitTesting;UITapGestureRecognizer(#sel(##handleTap(_:)))
##	FgView:body.SceneView().onTapGesture(perform: ##handleTap)
		private func ##handleTap() {
			##handleTap;DOCfwGuts.##modelPic()

//	func tapGesture(value v:TapGesture.Value, count:Int) {
//		let x:Vew? 				= DOCfwGuts.##modelPic(with:nsEvent)
	func processEvent
		case .leftMouseUp:
					if let vew	= fwGuts?.##modelPic(with:nsEvent, inVew:vew) {
		case .leftMouseDown:
					if let v	= fwGuts?.##modelPic(with:nsEvent, inVew:vew) {
	private func handleTapzz() {


##	func modelPic(with nsEvent:NSEvent, inVew vew:Vew) -> Vew? {
		if let picdVew = ##findVew(nsEvent:nsEvent, inVew:vew) {

##	func ##findVew(nsEvent:NSEvent, inVew:Vew) -> Vew? {
 		locInRoot = fwView.##convert(nsEvent.locationInWindow, from:nil)
		let hits  = fwView.##hitTest(locInRoot, options:configHitTest)
		if picdVew.part.##processEvent(nsEvent:nsEvent, inVew:picdVew) {











3.036 Abld4    76a8:RootPart               Raw Network:
76a8   <##      ROOT:RootPa. . . . . . . oVS  "'xr()' -> 14:LangDeser.41"
250e   | < 0      net0:Net   . . . . . . oVS 
7b9c   | | < 0  wordType:Actor . . . . . oVS evi:'evi' 
1ef0   | | | < 0        ma:MaxOr . . . . oV MaxOr a1=0.00 cWin=0 MaxOr WTA true reComp 
d606   | | | |\            P:Port  . . . oV 0.00>
a2ff F | | | |/            P:Port  . . . oV 0.00>
4526 Ff| | | < 1        mj:MinAnd. . . . oVS MinAnd a1=0.00 cWin=0 MinAnd WTA true reComp 
8e98   | | | < 2       evi:Tunnel. . . . oVS 
29d6   | | | | < 1..position:Leaf  . . . oVS bindings:[:gen, G:gen.P, R:gen.P] type:.genAtom 
4840 F | | | | | |/            P:Port  . oV 0.00>
368a Ff| | | | | < 0       gen:GenAto. . oVS 
a468   | | | | < 2determinat:Leaf  . . . oVS bindings:[:gen, G:gen.P, R:gen.P] type:.genAtom 
7866 F | | | | | |/            P:Port  . oV 0.00>
a6fe Ff| | | | | < 0       gen:GenAto. . oVS 
05f5   | | | | < 3     nouns:Leaf  . . . oVS bindings:[:gen, G:gen.P, R:gen.P] type:.genAtom 
639a F | | | | | |/            P:Port  . oV 0.00>
c9ff Ff| | | | | < 0       gen:GenAto. . oVS 
02ad   | | | | < 4 auxiliary:Leaf  . . . oVS bindings:[:gen, G:gen.P, R:gen.P] type:.genAtom 
49bd F | | | | | |/            P:Port  . oV 0.00>
0200 Ff| | | | | < 0       gen:GenAto. . oVS 
de12   | | | | < 5     verbs:Leaf  . . . oVS bindings:[:gen, G:gen.P, R:gen.P] type:.genAtom 
9d1e F | | | | | |/            P:Port  . oV 0.00>
b080 Ff| | | | | < 0       gen:GenAto. . oVS 
a33f   | | | | < 6        cp:Leaf  . . . oVS bindings:[:gen, G:gen.P, R:gen.P] type:.genAtom 
ca02 F | | | | | |/            P:Port  . oV 0.00>
95ab Ff| | | | | < 0       gen:GenAto. . oVS 
7c77   | | | |\            P:MultiP. . . oV 0.00>

3.037 Abld4    76a8:RootPart               ------- GATHERING potential Links:
3.038 Abld4    1ef0:MaxOr                  L1's source:..t0/wordType/ma.'P'      -->  target:mj
3.039 Abld4    1ef0:MaxOr                  L2's source:..t0/wordType/ma.'share'  -->  target:nouns
3.040 Abld4    1ef0:MaxOr                  L3's source:..t0/wordType/ma.'share'  -->  target:auxiliary
3.041 Abld4    4526:MinAnd                 L1's source:..t0/wordType/mj.'share'  -->  target:determinat
3.042 Abld4    4526:MinAnd                 L2's source:..t0/wordType/mj.'share'  -->  target:nouns
3.043 Abld4    76a8:RootPart               ------- WIRING 5 Links to Part:















4526  f| | | | | < 0       gen:GenAto. . oVS 
a2ff___|_|_|_|_|_|\___________ P:Port  . oV 0.00>
8e98_F_|_|_|_|_<_1_______foo:Leaf  . . . oVS bindings:[:gen, G:gen.P, R:gen.P] type:.genAtom 
d606 F | | | |/            P:MultiP. . . oV 0.00>
1ef0_Ff|_|_|_<_0_______con:Tunnel. . . . oVS 
7c77   | | | < 1        ma:MaxOr . . . . oV MaxOr a1=0.00 cWin=0 MaxOr WTA true reComp 
368a___|_|_|_|\____________P:Port  . . . oV 0.00>
29d6 F | | | |/            P:Port  . . . oV 0.00>
4840_Ff|_|_|_<_2________mj:MinAnd. . . . oVS MinAnd a1=0.00 cWin=0 MinAnd WTA true reComp 
c9ff F | | | | | |/            P:Port  . oV 0.00>
a468_Ff|_|_|_|_|_<_0_______gen:GenAto. . oVS 
639a___|_|_|_|_<_1_______bar:Leaf  . . . oVS bindings:[:gen, G:gen.P, R:gen.P] type:.genAtom 
a6fe   | | | < 3       evi:Tunnel. . . . oVS 
7866___|_|_|_|\____________P:MultiP. . . oV 0.00>
05f5___|_|_<_0__wordType:Actor . . . . . oVS evi:'evi' con:'con' 
0200___|_<_0______net0:Net___. . . . . . oVS 
76a8   <##      ROOT:RootPa. . . . . . . oVS  "'xr()' -> 14:LangDeser.43"
















Zip2Sequence<
	StrideThrough<Double>,
	UnfoldSequence<ContentView.OrbitState, (ContentView.OrbitState?, Bool)>>.Element

 UnfoldSequence<ContentView.OrbitState, (ContentView.OrbitState?, Bool)>.Element

An Element
   of an UnfoldSequence<ContentView.OrbitState, (ContentView.OrbitState?, Bool)>.Element















d606 F | | |/            P:Port  . . . . oP 1.00/0.00>
1ef0 Ff| | < 0         c:Hammin. . . . . oP Hamming a1=0.00 Hamming WTA false reComp 
7c77__f|_|_|\___________s1:Hammin. . . . oP 1.00/0.00>
7866 Ff| | |/            S:Convey. . . . oP 1.00/0.00><1.00/0.00 ->ROOT/net0/c.s1### ERROR: con2 != nil
368a   | | < 1        l0:Link  . . . . . oP ev=0, linkSkinType:dual
4840___|_|_|\____________P:Convey. . . . oP 1.00/0.00><1.00/0.00 ->ROOT/net0/mir0.P### ERROR: con2 != nil
a2ff F | | |/            P:Port  . . . . oP 1.00/0.00>
4526_Ff|_|_<_2______mir0:Mirror. . . . . oP 
8e98___|_<_0______net0:Net___. . . . . . oP 
76a8   <##      ROOT:RootPa. . . . . . . oP  "'xr()' -> 134:Tests01.888 (5 Ports)"

{
  Factals.Part = {						    name = "ROOT"
    children = 1 value {
      [0] = 0x000060000128f700 {
        Factals.Atom = {
          Factals.Part = {		            name = "net0"{...}
            children = 3 values{...}
            parent = 0x000000011e915cf0{...}
            dirty = paint{...}
            localConfig = 1 key/value pair{...}
            nLinesLeft = 0{...}
            initialExpose = open{...}
            _flipped ={...}
            _lat ={...}
            _spin ={...}
            _shrink ={...}
            _placeSelf ={...}
            nFullN = 18{...}
          }
          _bandColor = {
            storage = value{...}
          }
          proxyColor = nil
          postBuilt = false
          ports = 0 key/value pairs {}
          bindings = nil
        }
        _minSize = {
          storage = value {
            value = nil{...}
          }
        }
      }
    }
    parent = nil
    dirty = paint
    localConfig = 0 key/value pairs {}
    nLinesLeft = 0
    initialExpose = open
    _flipped = {
      storage = value (value = false)
    }
    _lat = {
      storage = value {
        value = northPole
      }
    }
    _spin = {
      storage = value (value = 0)
    }
    _shrink = {
      storage = value (value = 0)
    }
    _placeSelf = {
      storage = value (value = "")
    }
    nFullN = 18
  }
  simulator = 0x0000600003491040 {
    ObjectiveC.NSObject = {
      isa = Factals.Simulator
    }
    rootPart = 0x000000011e915cf0 {...}
    timingChains = 0 values {}
    timeNow = 0
    simTimeStep = 0.00999999977
    globalDagDirUp = true
    logSimLocks = false
    simTaskRunning = false
    kickstart = 0
    unsettledOwned = 0
    simEnabled = false
    simBuilt = false
  }
  title = "\'xr()\' -> 134:Tests01.888 (5 Ports)"
  ansConfig = 3 key/value pairs {
    [0] = {
      key = "Vew0"
      value = openAllChildren {
        openAllChildren = (toDeapth = 4)
      }
    }
    [1] = {
      key = "selfiePole"
      value = 4 key/value pairs {
        [0] = {
          key = "u"
          value = 10
        }
        [1] = {
          key = "s"
          value = 10
        }
        [2] = {
          key = "z"
          value = 1
        }
        [3] = {
          key = "h"
          value = 0
        }
      }
    }
    [2] = {
      key = "gapLinkFluff"
      value = 3
    }
  }
  factalsModel = 0x0000600001c8d830 {
    ObjectiveC.NSObject = {
      isa = Factals.FactalsModel
    }
    _rootPart = {
      storage = value {
        value = 0x000000011e915cf0 {...}
      }
    }
    document = some {
      uid = 29208
      factalsModel = 0x0000600001c8d830 {...}
      config = 0 key/value pairs {}
      indexFor = 0 key/value pairs {}
      inspecWin4vew = 0 key/value pairs {}
      inspecLastVew = nil
      inspecWindow = nil
    }
    rootVews = 1 value {
      [0] = 0x000000011cf0ef20 {
        Factals.Vew = {
          ObjectiveC.NSObject = {
            isa = Factals.RootVew{...}
          }
          _part = {
            storage = value{...}
          }
          scn = 0x00000001067a9ff0 {
            baseNSObject@0 ={...}
            _parent = 0x0000000000000000{...}
            _childNodes = 0x000060000205ee80 1 element{...}
            _presentationInstance = 0x0000000000000000{...}
            _opacity = 1
            _categoryBitMask = 1
            _renderingOrder = 0
            _components = 0x0000000000000000{...}
            _actions = 0x0000000000000000{...}
            _animations = 0x0000000000000000{...}
            _bindings = 0x0000000000000000{...}
            _name = "*-ROOT"{...}
            _valueForKey = 0x0000000000000000{...}
            _rendererDelegate = 0x0000000000000000{...}
          }
          parent = nil
          children = 1 value {
            [0] = 0x00006000011b9c20{...}
          }
          _name = {
            storage = value{...}
          }
          _color000 = {
            storage = value{...}
          }
          keep = false
          bBox = {
            min ={...}
            max ={...}
          }
          _expose = {
            storage = value{...}
          }
          jog = nil
          force = {
            x = 0{...}
            y = 0{...}
            z = 0{...}
          }
          openConfig = 73 key/value pairs {
            [0] ={...}
            [1] ={...}
            [2] ={...}
            [3] ={...}
            [4] ={...}
            [5] ={...}
            [6] ={...}
            [7] ={...}
            [8] ={...}
            [9] ={...}
            [10] ={...}
            [11] ={...}
            [12] ={...}
            [13] ={...}
            [14] ={...}
            [15] ={...}
            [16] ={...}
            [17] ={...}
            [18] ={...}
            [19] ={...}
            [20] ={...}
            [21] ={...}
            [22] ={...}
            [23] ={...}
            [24] ={...}
            [25] ={...}
            [26] ={...}
            [27] ={...}
            [28] ={...}
            [29] ={...}
            [30] ={...}
            [31] ={...}
            [32] ={...}
            [33] ={...}
            [34] ={...}
            [35] ={...}
            [36] ={...}
            [37] ={...}
            [38] ={...}
            [39] ={...}
            [40] ={...}
            [41] ={...}
            [42] ={...}
            [43] ={...}
            [44] ={...}
            [45] ={...}
            [46] ={...}
            [47] ={...}
            [48] ={...}
            [49] ={...}
            [50] ={...}
            [51] ={...}
            [52] ={...}
            [53] ={...}
            [54] ={...}
            [55] ={...}
            [56] ={...}
            [57] ={...}
            [58] ={...}
            [59] ={...}
            [60] ={...}
            [61] ={...}
            [62] ={...}
            [63] ={...}
            [64] ={...}
            [65] ={...}
            [66] ={...}
            [67] ={...}
            [68] ={...}
            [69] ={...}
            [70] ={...}
            [71] ={...}
            [72] ={...}
          }
          adornTargetVew = nil
        }
        factalsModel = 0x0000600001c8d830 {...}
        rootScene = 0x00000001067a9120 {
          SceneKit.SCNScene = {
            baseNSObject@0 ={...}
            _scene = 0x00000001067a9230{...}
            _sceneSource = 0x0000000000000000{...}
            _physicsWorld = 0x0000000000000000{...}
            _rootNode = some{...}
            _layerRootNode ={...}
            _background = 0x0000000000000000{...}
            _environment = 0x0000000000000000{...}
            _userAttributes = 0x0000000000000000{...}
            _fogStartDistance = 0
            _fogEndDistance = 0
            _fogDensityExponent = 1
            _fogColor = some{...}
            _wantsScreenSpaceReflection = false
            _screenSpaceReflectionSampleCount = 64
            _screenSpaceReflectionMaxRayDistance = 1000
            _screenSpaceReflectionStride = 8
            _paused = false
            _sourceURL = 0x0000000000000000{...}
            _pausedForEditing = false
            _allowsDefaultLightingEnvironmentFallback = false
            _authoringEnvironment = 0x0000000000000000{...}
          }
          rootVew = 0x000000011cf0ef20 {...}
          nextIsAutoRepeat = false
          mouseWasDragged = false
          lastPosition = nil
          deltaPosition = {
            x = 0{...}
            y = 0{...}
            z = 0{...}
          }
        }
        nsView = nil
        _selfiePole = {
          storage = value {
            value ={...}
          }
        }
        lookAtVew = nil
        rootVewLock = 0x000060000488a0d0 {
          baseOS_dispatch_object@0 = {
            baseOS_object@0 ={...}
          }
        }
        rootVewOwner = nil
        rootVewOwnerPrev = nil
        rootVewVerbose = false
      }
    }
    log = 0x00006000019882c0 {
      uid = 11412
      title = "FwGut\'s Log"
      logNo = 3
      eventNumber = 61
      breakAtEvent = 60
      breakAtLogger = 3
      logEvents = true
      verbosity = 1 key/value pair {
        [0] = (key = "all", value = 8)
      }
      msgPriority = nil
      msgFilter = nil
      simTimeLastLog = 0
      logTime = true
      ppIndentCols = 14
      ppPorts = true
      ppNUid4Tree = 4
      ppNUid4Ctl = 4
      nIndent = 0
      threadNameCache = 1 value {
        [0] = ""
      }
    }
    wiggledPart = nil
    wiggleOffset = nil
  }
  partTreeLock = 0x0000600000d8e9e0 {
    baseOS_dispatch_object@0 = {
      baseOS_object@0 = {
        baseNSObject@0 = {
          isa = OS_dispatch_semaphore
        }
      }
    }
  }
  partTreeOwner = nil
  partTreeOwnerPrev = nil
  partTreeVerbose = true


github.com thing LLM
not xcode
appcode jetbrain aplleIDE		inteleJ
autocomplete
vscode2

swiftUI companion $50
										lower left link------.
										upper 
t:0.6299997 going:up taskRun; Run Sim=1/Ports,0/Links,0/kick	- -
t:0.6399997 going:dn taskRun; Run Sim=1/Ports,0/Links,0/kick	- -
t:0.6499997 going:up taskRun; Run Sim=1/Ports,0/Links,4/kick	r -	-
t:0.6599997 going:dn taskRun; Run Sim=0/Ports,1/Links,3/kick	r -	-
t:0.6699996 going:up taskRun; Run Sim=0/Ports,1/Links,2/kick	r g -
t:0.6799996 going:dn taskRun; Run Sim=0/Ports,1/Links,1/kick	r g g
t:0.6899996 going:up taskRun; Run Sim=0/Ports,1/Links,0/kick	r g g
Event 57:
t:1.2799991 going:up taskRun; Run Sim=0/Ports,1/Links,0/kick	r g g -
t:1.2899991 going:up taskRun; SETTLED=0/Ports,0/Links,0/kick	r g g g

wireAndGroom([:])
	groomModelPostWires(root:RootPart)
groomModel(parent:self)


af9311942fccdeb81c18676b03d124384a63bd7b last change: /loc 1/20 fails Loading...
7dfcc69f5de197318e7adb64d0692dc0c21a4c61 morning           1/18 fails Loading...
eb6049a80456e702740f1e9c5f594b3d516ccdba compiles          1/17 fails Loading...
fec85ded9f410cb592079afa48d0e73fcca74376 about to move sim 1/17 works NO WAIT

appGlobals2
	class AppGlobals2 : ObservableObject								// Define
	@StateObject var appGlobals2 = AppGlobals2(appConfig:params4pp)		// Instantiate
	extension FactalsApp|  var body|   DocumentGroup| .environmentOjbect// Inject
	struct VewBar: View {
		@EnvironmentObject var appGlobals2: AppGlobals2					// Access
		tree.pp(.tree, appGlobals2.appConfig							// Use

					___AppGlobals2____			____appGlobalsX___
Define				   *file* FactalsApp			FactalsApp
Instantiate			   FactalsApp					FactalsApp
					   								FactalsApp .libraryMenu
Inject				   FactalsApp DocGrp.envir..
Access				   VewBar
Use					   VewBar


================================================================
================ PATH 1
App.main()
...
FactalsApp.swift:117: 
		init(appConfig a:FwConfig) {
		func buildSceneMenus() -> [LibraryMenuElement]
================ PATH 2






scanCatalog:

struct ScanElement	: Codable {
	var tag		  	: Int
	var title	  	: String
	var subMenu	  	: String		// path scene/decoder/...
}

		struct LibraryMenuElement : Identifiable {
			let id: Int
			let name: String
			let imageName: String? = nil
			let children = [LibraryMenuElement]()
		}



		var libraryMenu : [LibraryMenuElement] = []		
/		/getMenuItems()	//=//NSMenuItem
//		[	LibraryMenuElement(id: 1, name: "Option 1", imageName: "1.circle",	
//								   	  action: { print("Option 1 selected") }),

















Cannot convert value of type
'[String : MenuTree]' (aka 'Dictionary<String, FactalsApp.FactalsGlobals.MenuTree>')
to specified type
'MenuTree' (aka 'FactalsApp.FactalsGlobals.MenuTree')

https://twitter.com/i/status/1776669097490776563

Cannot assign value of type
'[String : LibraryMenuTree]' (aka 'Dictionary<String, FactalsApp.FactalsGlobals.LibraryMenuTree>') to type
'[FactalsApp.FactalsGlobals.LibraryMenuTree]'']

Cannot assign value of type
'Dictionary<String, LibraryMenuTree>.Values' (aka 'Dictionary<String, FactalsApp.FactalsGlobals.LibraryMenuTree>.Values') to type
'[LibraryMenuArray]'

'Array<Dictionary<String, LibraryMenuTree>.Values.Element>'
	(aka 'Array<FactalsApp.FactalsGlobals.LibraryMenuTree>')
'[LibraryMenuArray]'
















'FactalsApp.FactalsGlobals.LibraryMenuTree' to type
'[FactalsApp.FactalsGlobals.LibraryMenuTree]'

















'FactalsApp.FactalsGlobals.Type' to type
'FwConfig' (aka 'Dictionary<String, any FwAny>')